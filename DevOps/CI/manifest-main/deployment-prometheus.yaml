apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app":"prometheus"},"name":"prometheus","namespace":"kube-mon"},"spec":{"selector":{"matchLabels":{"app":"prometheus"}},"template":{"metadata":{"labels":{"app":"prometheus"}},"spec":{"containers":[{"args":["--config.file=/etc/prometheus/prometheus.yml","--storage.tsdb.path=/prometheus","--storage.tsdb.retention.time=24h","--web.enable-admin-api","--web.enable-lifecycle"],"image":"prom/prometheus:v2.24.1","name":"prometheus","ports":[{"containerPort":9090,"name":"http"}],"resources":{"requests":{"cpu":"500m","memory":"1024Mi"}},"volumeMounts":[{"mountPath":"/etc/prometheus","name":"config-volume"},{"mountPath":"/prometheus","name":"data"},{"mountPath":"/etc/localtime","name":"host-time"}]}],"securityContext":{"runAsUser":0},"serviceAccountName":"prometheus","volumes":[{"name":"data","persistentVolumeClaim":{"claimName":"prometheus-data"}},{"configMap":{"name":"prometheus-config"},"name":"config-volume"},{"hostPath":{"path":"/etc/localtime"},"name":"host-time"}]}}}}
  creationTimestamp: "2023-07-07T06:40:25Z"
  generation: 1
  labels:
    app: prometheus
  name: prometheus
  namespace: kube-mon
  resourceVersion: "6873746"
  uid: ffec61ef-a66d-48e1-b1c3-bdeecad1de73
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: prometheus
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: prometheus
    spec:
      containers:
      - args:
        - --config.file=/etc/prometheus/prometheus.yml
        - --storage.tsdb.path=/prometheus
        - --storage.tsdb.retention.time=24h
        - --web.enable-admin-api
        - --web.enable-lifecycle
        image: prom/prometheus:v2.29.2
        imagePullPolicy: IfNotPresent
        name: prometheus
        ports:
        - containerPort: 9090
          name: http
          protocol: TCP
        resources:
          requests:
            cpu: 500m
            memory: 1Gi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /etc/prometheus
          name: config-volume
        - mountPath: /prometheus
          name: data
        - mountPath: /etc/localtime
          name: host-time
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        runAsUser: 0
      serviceAccount: prometheus
      serviceAccountName: prometheus
      terminationGracePeriodSeconds: 30
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: prometheus-data
      - configMap:
          defaultMode: 420
          name: prometheus-config
        name: config-volume
      - hostPath:
          path: /etc/localtime
          type: ""
        name: host-time
status:
  availableReplicas: 1
  conditions:
  - lastTransitionTime: "2023-07-07T06:40:25Z"
    lastUpdateTime: "2023-07-07T06:45:20Z"
    message: ReplicaSet "prometheus-54d9694cf7" has successfully progressed.
    reason: NewReplicaSetAvailable
    status: "True"
    type: Progressing
  - lastTransitionTime: "2023-07-07T09:57:11Z"
    lastUpdateTime: "2023-07-07T09:57:11Z"
    message: Deployment has minimum availability.
    reason: MinimumReplicasAvailable
    status: "True"
    type: Available
  observedGeneration: 1
  readyReplicas: 1
  replicas: 1
  updatedReplicas: 1
